# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: __REPLACE_IMAGE_NAME__
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
imagePullSecrets: [ ]

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

extEnv: [ ]

extArgs: [ ]

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

prometheus:
  enabled: true
  scrapeInterval: 10s
  scrapeTimeout: 5s
  path: "/actuator/prometheus"
  labels:
    team: backend

mysql:
  enabled: false
  host: ""
  database: ""
  username: root
  password: root

redis:
  address: ""
  password: "123456"
  database: 0


thirdParty:
  dingtalk:
    token: ""
    secret: ""
  openai:
    token: ""

mailServer:
  sender: "no-reply@example.com"
  host: ""
  port: 587
  username: ""
  password: ""

auth:
  root:
    autoInit: false
    phones: RootPhones
  allowMock: false
  allowCrossOrigin: true
  jwtSecret: ""

file:
  storage: directory
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: ""


# Config server
configserver:
  enabled: true
  replicaCount: 1

  image:
    repository: __REPLACE_IMAGE_NAME__
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  git:
    reop: ""
    path: ""
    username: ""
    password: ""

  prometheus: { }
  serviceAccount: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  service: { }
  ingress:
    enabled: false
    paths:
      - path: /
        pathType: ImplementationSpecific
  resources: { }
  extEnv: [ ]
  extArgs: [ ]
  autoscaling: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

# Identity service
identity:
  enabled: true
  replicaCount: 1

  image:
    repository: __REPLACE_IMAGE_NAME__
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  prometheus: { }
  serviceAccount: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  service: { }
  ingress:
    enabled: true
    paths:
      - path: /api/open/(auth|common|oauth|user).*
        pathType: ImplementationSpecific
      - path: /api/admin/(administrators|customers|files|system).*
        pathType: ImplementationSpecific
      - path: /(webjars|v3|doc.html).*
        pathType: ImplementationSpecific
  resources: { }
  extEnv: [ ]
  extArgs: [ ]
  autoscaling: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

# subscription service
subscription:
  enabled: true
  replicaCount: 1

  image:
    repository: __REPLACE_IMAGE_NAME__
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  prometheus: { }
  serviceAccount: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  service: { }
  ingress:
    enabled: true
    paths:
      - path: /api/admin/equity/.*
        pathType: ImplementationSpecific
  resources: { }
  extEnv: [ ]
  extArgs: [ ]
  autoscaling: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

# Agent service
agent:
  enabled: true
  replicaCount: 1

  image:
    repository: __REPLACE_IMAGE_NAME__
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  prometheus: { }
  serviceAccount: { }
  podAnnotations: { }
  podSecurityContext: { }
  securityContext: { }
  service: { }
  ingress:
    enabled: true
    paths:
      - path: /api/open/chat/.*
        pathType: ImplementationSpecific
      - path: /api/admin/token-accounts.*
        pathType: ImplementationSpecific
  resources: { }
  extEnv: [ ]
  extArgs: [ ]
  autoscaling: { }
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
