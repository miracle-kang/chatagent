# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Develop - Java CI with Maven

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - ".springconfig/**"
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_REPO: ghcr.io/miracle-kang/chatgpt
  HELM_REPO: miracle
  CHART_NAME: chatagent

permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Setup environments
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push
          helm repo add ${HELM_REPO} ${{ secrets.HELM_REPO_URL }} --username ${{ secrets.HELM_USERNAME }} --password ${{ secrets.HELM_PASSWORD }}
          helm repo update ${HELM_REPO}
          echo "SHORT_COMMIT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "VERSION=$(bash .github/helm.sh next-rc ${HELM_REPO}/${CHART_NAME})" >> $GITHUB_ENV

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_REPO }}:${{ env.VERSION }}
            ${{ env.IMAGE_REPO }}:${{ env.VERSION }}-${{ env.SHORT_COMMIT }}

      #      - name: Clean Old Images
      #        uses: actions/delete-package-versions@v4
      #        with:
      #          package-type: 'container'
      #          package-name: ${{ env.IMAGE_NAME }}
      #          min-versions-to-keep: 5
      #          ignore-versions: 'latest'
      #          delete-only-pre-release-versions: "true"

      - name: Build and Push Helm Chart
        run: |
          sed -i "s/__REPLACE_CHART_NAME__/${CHART_NAME}/g" ./.charts/Chart.yaml
          sed -i "s,__REPLACE_IMAGE_NAME__,${IMAGE_REPO},g" ./.charts/values.yaml
          helm cm-push ./.charts ${HELM_REPO} --version ${{ env.VERSION }} --app-version ${{ env.VERSION }}-${{ env.SHORT_COMMIT }}
